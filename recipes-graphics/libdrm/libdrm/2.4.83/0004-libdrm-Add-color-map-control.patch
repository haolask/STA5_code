From dbe1892d21a01f7f752f52d66a8c28e5bf7b5c13 Mon Sep 17 00:00:00 2001
From: Stephane Danieau <stephane.danieau@st.com>
Date: Mon, 12 Mar 2018 16:05:07 +0100
Subject: [PATCH 4/6] libdrm: Add color map control

Color map is used for color index format, like C8 4cc pixel format.

Signed-off-by: Stephane Danieau <stephane.danieau@st.com>

diff --git a/include/drm/drm.h b/include/drm/drm.h
index bf3674a..c5dbd20 100644
--- a/include/drm/drm.h
+++ b/include/drm/drm.h
@@ -829,6 +829,8 @@ extern "C" {
 #define DRM_IOCTL_MODE_ATOMIC		DRM_IOWR(0xBC, struct drm_mode_atomic)
 #define DRM_IOCTL_MODE_CREATEPROPBLOB	DRM_IOWR(0xBD, struct drm_mode_create_blob)
 #define DRM_IOCTL_MODE_DESTROYPROPBLOB	DRM_IOWR(0xBE, struct drm_mode_destroy_blob)
+#define DRM_IOCTL_MODE_GETCMAP		DRM_IOWR(0xBF, struct drm_mode_crtc_lut)
+#define DRM_IOCTL_MODE_SETCMAP		DRM_IOWR(0xC0, struct drm_mode_crtc_lut)
 
 #define DRM_IOCTL_SYNCOBJ_CREATE	DRM_IOWR(0xBF, struct drm_syncobj_create)
 #define DRM_IOCTL_SYNCOBJ_DESTROY	DRM_IOWR(0xC0, struct drm_syncobj_destroy)
diff --git a/include/drm/drm_mode.h b/include/drm/drm_mode.h
index 5a168f1..2f2208b 100644
--- a/include/drm/drm_mode.h
+++ b/include/drm/drm_mode.h
@@ -165,6 +165,7 @@ struct drm_mode_crtc {
 	__u32 y; /**< y Position on the framebuffer */
 
 	__u32 gamma_size;
+	__u32 cmap_size;
 	__u32 mode_valid;
 	struct drm_mode_modeinfo mode;
 };
diff --git a/xf86drmMode.c b/xf86drmMode.c
index d3bc20e..646b547 100644
--- a/xf86drmMode.c
+++ b/xf86drmMode.c
@@ -383,6 +383,7 @@ drmModeCrtcPtr drmModeGetCrtc(int fd, uint32_t crtcId)
 	}
 	r->buffer_id       = crtc.fb_id;
 	r->gamma_size      = crtc.gamma_size;
+	r->cmap_size       = crtc.cmap_size;
 	return r;
 }
 
@@ -883,6 +884,36 @@ int drmModeCrtcSetGamma(int fd, uint32_t crtc_id, uint32_t size,
 	return DRM_IOCTL(fd, DRM_IOCTL_MODE_SETGAMMA, &l);
 }
 
+int drmModeCrtcGetCmap(int fd, uint32_t crtc_id, uint32_t size,
+		       uint16_t *red, uint16_t *green, uint16_t *blue)
+{
+	struct drm_mode_crtc_lut l;
+
+	memclear(l);
+	l.crtc_id = crtc_id;
+	l.gamma_size = size;
+	l.red = VOID2U64(red);
+	l.green = VOID2U64(green);
+	l.blue = VOID2U64(blue);
+
+	return DRM_IOCTL(fd, DRM_IOCTL_MODE_GETCMAP, &l);
+}
+
+int drmModeCrtcSetCmap(int fd, uint32_t crtc_id, uint32_t size,
+		       uint16_t *red, uint16_t *green, uint16_t *blue)
+{
+	struct drm_mode_crtc_lut l;
+
+	memclear(l);
+	l.crtc_id = crtc_id;
+	l.gamma_size = size;
+	l.red = VOID2U64(red);
+	l.green = VOID2U64(green);
+	l.blue = VOID2U64(blue);
+
+	return DRM_IOCTL(fd, DRM_IOCTL_MODE_SETCMAP, &l);
+}
+
 int drmHandleEvent(int fd, drmEventContextPtr evctx)
 {
 	char buffer[1024];
diff --git a/xf86drmMode.h b/xf86drmMode.h
index 5b390d9..5f9c82c 100644
--- a/xf86drmMode.h
+++ b/xf86drmMode.h
@@ -262,6 +262,7 @@ typedef struct _drmModeCrtc {
 	drmModeModeInfo mode;
 
 	int gamma_size; /**< Number of gamma stops */
+	int cmap_size; /**< Number of cmap entries */
 
 } drmModeCrtc, *drmModeCrtcPtr;
 
@@ -474,6 +475,10 @@ extern int drmModeCrtcSetGamma(int fd, uint32_t crtc_id, uint32_t size,
 			       uint16_t *red, uint16_t *green, uint16_t *blue);
 extern int drmModeCrtcGetGamma(int fd, uint32_t crtc_id, uint32_t size,
 			       uint16_t *red, uint16_t *green, uint16_t *blue);
+extern int drmModeCrtcSetCmap(int fd, uint32_t crtc_id, uint32_t size,
+			      uint16_t *red, uint16_t *green, uint16_t *blue);
+extern int drmModeCrtcGetCmap(int fd, uint32_t crtc_id, uint32_t size,
+			      uint16_t *red, uint16_t *green, uint16_t *blue);
 extern int drmModePageFlip(int fd, uint32_t crtc_id, uint32_t fb_id,
 			   uint32_t flags, void *user_data);
 extern int drmModePageFlipTarget(int fd, uint32_t crtc_id, uint32_t fb_id,
-- 
2.7.4

