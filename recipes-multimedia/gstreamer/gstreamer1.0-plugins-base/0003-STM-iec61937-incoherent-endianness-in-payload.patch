From f0395483ae3f90b06e8aa72f978e8697c1b38cd2 Mon Sep 17 00:00:00 2001
From: Christophe Priouzeau <christophe.priouzeau@linaro.org>
Date: Wed, 6 Apr 2016 15:52:19 +0200
Subject: [PATCH 3/7] STM: iec61937: incoherent endianness in payload

Order header based on specified endianness and not system endianness
Fix following bugzilla
https://bugzilla.gnome.org/show_bug.cgi?id=678021

Change-Id: Ie25e9dba55cd09c1a1a55e2021f8c25fa2bfb23b
Signed-off-by: Arnaud Pouliquen <arnaud.pouliquen@st.com>

diff --git a/gst-libs/gst/audio/gstaudioiec61937.c b/gst-libs/gst/audio/gstaudioiec61937.c
index 948325e..a192913 100644
--- a/gst-libs/gst/audio/gstaudioiec61937.c
+++ b/gst-libs/gst/audio/gstaudioiec61937.c
@@ -161,14 +161,16 @@ gst_audio_iec61937_payload (const guint8 * src, guint src_n, guint8 * dst,
     guint dst_n, const GstAudioRingBufferSpec * spec, gint endianness)
 {
   guint i, tmp;
-#if G_BYTE_ORDER == G_BIG_ENDIAN
-  guint8 zero = 0, one = 1, two = 2, three = 3, four = 4, five = 5, six = 6,
-      seven = 7;
-#else
-  /* We need to send the data byte-swapped */
-  guint8 zero = 1, one = 0, two = 3, three = 2, four = 5, five = 4, six = 7,
-      seven = 6;
-#endif
+  guint8 zero = 0, one = 1, two = 2, three = 3, four = 4, five = 5, six = 6;
+  guint8 seven = 7;
+
+  if (G_BYTE_ORDER != endianness) {
+    /* We need to send the data byte-swapped */
+    zero = one--;
+    two = three--;
+    four = five--;
+    six = seven--;
+  }
 
   g_return_val_if_fail (src != NULL, FALSE);
   g_return_val_if_fail (dst != NULL, FALSE);
-- 
2.7.4

